

entity Banner {
    name String,
    bannerData String,
    status Boolean
}

entity Logo {
    name String,
    logoData String,
    status Boolean
}

entity Greeting {
    contentUz String,
    contentRu String,
    contentKr String
}

entity CenterStructure {
    contentUz String,
    contentRu String,
    contentKr String
}

entity OurHistory {
    contentUz String,
    contentRu String,
    contentKr String,
    postedDate Date
}

entity File {
    orginalName String,
    fileName String,
    fileSize Int,
    fileFormat String,
    filePath String,
    fileEntity FileEntity
}

entity WorkPlan {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String,
    planType PlanType
}

entity Address {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String
}

entity News {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String
    postedDate Date,
    status Boolean
}

entity Events {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String
    postedDate Date,
    status Boolean
}

entity StudyAtKorea {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String
}

entity TimeTable {
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String,
    postedDate Date
}

entity Institution {
    institutionType InstitutType,
    titleUz String,
    titleRu String,
    titleKr String,
    contentUz String,
    contentRu String,
    contentKr String,
    logoName  String,
    logoData  String
}

entity AnswerAndQuestion {
    questionUz String,
    questionRu String,
    questionKr String,
    answerUz String,
    answerRu String,
    answerKr String
}


entity Image {
    orginalName String,
    name String,
    imageData String,
    mainlyPhoto Boolean
}

entity Album {
    titleUz String,
    titleRu String,
    titleKr String
}

enum PlanType {
    MONTH,
    YEAR
}

enum FileEntity {
    STUDYATKOREA,
    INSTITUION
}

enum InstitutType {
    COLLEGEANDLYCEUM,
    KOREANUNIVERSITY,
    UZBEKISTANUNIVERSITY,
    SCHOOL
}

relationship OneToMany {
    Album to Image{image}
    Institution to File{institution}
    StudyAtKorea to File{studyAtKorea}
}

entity Region {
	regionName String
}

entity Country {
	countryName String
}

// an ignored comment
/** not an ignored comment */
entity Location {
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String
}

entity Department {
	departmentName String required
}

/**
 * Task entity.
 * @author The JHipster team.
 */
entity Task {
	title String,
	description String
}

/**
 * The Employee entity.
 */
entity Employee {
	/**
	* The firstname attribute.
	*/
	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	hireDate Instant,
	salary Long,
	commissionPct Long
}

entity Job {
	jobTitle String,
	minSalary Long,
	maxSalary Long
}

entity JobHistory {
	startDate Instant,
	endDate Instant,
	language Language
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}

relationship ManyToMany {
	Job{task(title)} to Task{job}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee to Job{employee},
	/**
	* A relationship
	*/
	Department to
	/**
	* Another side of the same relationship
	*/
	Employee{department}
}

relationship ManyToOne {
	Employee{manager} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job,
	JobHistory{department} to Department,
	JobHistory{employee} to Employee
}

// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
